<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <title>Lịch cá nhân</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      .online-status {
        position: fixed;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #ecfdf5;
        color: #047857;
        padding: 8px 14px;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
        font-size: 14px;
        font-weight: 500;
        z-index: 9999;
        max-width: 90vw;
        text-align: center;
        opacity: 0.95;
      }

      [data-theme="dark"] .online-status {
        background-color: #1f2937;
        color: #d1fae5;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
      }

      [data-theme="dark"] .online-status::before {
        background: radial-gradient(circle, #6ee7b7 0%, #10b981 100%);
      }

      .online-status::before {
        content: "";
        display: inline-block;
        width: 10px;
        height: 10px;
        background: radial-gradient(circle, #34d399 0%, #059669 100%);
        border-radius: 50%;
      }

      .logout-btn {
        background-color: #f44336;
        color: white;
        border: none;
        padding: 8px 14px;
        border-radius: 6px;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      .logout-btn:hover {
        background-color: #d32f2f;
      }

      #loadingSync {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        z-index: 9999;
        display: none;
      }

      .spinner {
        margin: 0 auto 12px;
        border: 6px solid #ccc;
        border-top: 6px solid #007bff;
        border-radius: 50%;
        width: 48px;
        height: 48px;
        animation: spin 0.8s linear infinite;
      }

      #loadingSync p {
        font-size: 18px;
        color: #5a5a5a;
        font-weight: 500;
        margin: 0;
        opacity: 0.8;
      }

      .fade-out {
        opacity: 0;
        transition: opacity 0.5s ease;
      }

      .fade-in {
        opacity: 1;
        transition: opacity 0.5s ease;
      }

      .spinner {
        margin: 0 auto;
        border: 4px solid #ccc;
        border-top: 4px solid #007bff;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        animation: spin 0.8s linear infinite;
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }

      [data-loading="true"] {
        pointer-events: none;
        opacity: 0.6;
      }
      .container {
        width: 100%;
        max-width: 820px;
        overflow-x: hidden;
        margin: 40px auto;
        background: var(--card);
        padding: 30px 24px;
        border-radius: 16px;
        box-shadow: 0 20px 50px rgba(0, 0, 0, 0.05);
        animation: fadeIn 0.5s ease-in-out;
      }
      button.btn {
        width: 100%;
        max-width: 240px;
      }

      #theme-wave {
        pointer-events: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 999;
        background: linear-gradient(120deg, #0ea5e9aa, #9333eaaa);
        opacity: 0;
        mix-blend-mode: overlay;
        filter: blur(60px);
        transition: opacity 1.4s ease, transform 1.4s ease;
        will-change: opacity, transform;
      }

      @keyframes themeWave {
        0% {
          opacity: 0;
          transform: scaleX(1) translateX(-100%);
          filter: blur(80px);
        }
        40% {
          opacity: 0.9;
          transform: scaleX(1.4) translateX(-30%);
          filter: blur(100px);
        }
        60% {
          opacity: 1;
          transform: scaleX(1.2) translateX(30%);
          filter: blur(80px);
        }
        100% {
          opacity: 0;
          transform: scaleX(1) translateX(100%);
          filter: blur(60px);
        }
      }

      :root {
        --bg: #f9fafb;
        --text: #1e3a8a;
        --card: #ffffff;
        --primary: #0ea5e9;
        --primary-hover: #0284c7;
      }

      * {
        transition: background-color 0.6s ease, color 0.6s ease,
          border-color 0.6s ease;
        box-sizing: border-box;
      }

      [data-theme="dark"] {
        --bg: #0f172a;
        --text: #e0f2fe;
        --card: #1e293b;
        --primary: #38bdf8;
        --primary-hover: #0ea5e9;
      }

      body {
        font-family: "Segoe UI", sans-serif;
        background-color: var(--bg);
        color: var(--text);
        margin: 0;
        padding: 20px;
        transition: background-color 0.6s ease, color 0.6s ease;
      }

      h1 {
        font-size: 1.8rem;
      }

      .block-lich {
        overflow: hidden;
        border-radius: 12px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
      }
      .block-lich:hover {
        transform: translateY(-6px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
      }

      .section-title {
        font-size: 1.4rem;
        color: var(--primary);
        background: var(--bg);
        text-align: center;
        border-radius: 12px;
        padding: 12px 0;
        margin: 20px 0 16px;
        width: 100%;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.04);
        transition: all 0.4s ease;
      }

      .login-info {
        margin-bottom: 20px;
        font-style: italic;
        color: var(--primary);
      }

      .tab-container {
        display: flex;
        gap: 10px;
        margin-bottom: 10px;
        flex-wrap: wrap;
      }

      .tab {
        cursor: pointer;
        padding: 12px 20px;
        border: none;
        border-radius: 8px 8px 0 0;
        background-color: var(--card);
        color: var(--text);
        font-weight: 500;
        transition: 0.3s ease;
      }

      .tab:hover {
        background-color: var(--primary);
        color: #fff;
      }

      .tab.active {
        background-color: var(--primary);
        color: #fff;
      }

      .tab-content {
        display: none;
        animation: fadeIn 0.3s ease;
        background: var(--card);
        padding: 20px;
        border-radius: 0 0 8px 8px;
        box-shadow: 0 0 6px rgba(0, 0, 0, 0.1);
      }

      .tab-content.active {
        display: block;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .toggle-theme {
        z-index: 10000;
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 10px 14px;
        background: var(--primary);
        border: none;
        color: white;
        border-radius: 8px;
        cursor: pointer;
        font-size: 0.9rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      }

      .block-lich {
        margin-bottom: 16px;
        border-left: 5px solid #0ea5e9;
        background: #ecfeff;
        border-radius: 12px;
        padding: 16px;
        overflow: hidden;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
      }

      [data-theme="dark"] .block-lich {
        background-color: #1e3a8a;
        border-left-color: #38bdf8;
        color: #e0f2fe;
        box-shadow: 0 2px 6px rgba(56, 189, 248, 0.1);
      }

      [data-theme="dark"] .block-lich * {
        color: #e0f2fe !important;
      }

      [data-theme="dark"] .block-lich .block-time {
        color: #38bdf8 !important;
      }

      [data-theme="dark"] .block-lich .block-title {
        color: #38bdf8 !important;
      }
      [data-theme="dark"] .section-title {
        background: #1e3a8a;
        box-shadow: 0 4px 10px rgba(32, 22, 120, 0.781);
      }

      @media (max-width: 768px) {
        .online-status {
          left: auto;
          right: 16px;
          transform: none;
        }
        .container {
          padding: 16px;
        }

        .block-lich {
          padding: 14px 12px;
          margin-bottom: 20px;
          width: 100%;
        }

        .lich-header {
          flex-direction: column;
          align-items: flex-start;
          gap: 6px;
          font-size: 1rem;
          padding: 10px 12px;
        }

        .lich-header .block-time {
          align-self: flex-end;
          font-size: 0.95rem;
          font-weight: 600;
        }

        .block-title {
          font-size: 1.15rem;
          margin-top: 10px;
          word-break: break-word;
        }

        .lich-info li {
          font-size: 1rem;
          line-height: 1.6;
          word-break: break-word;
          padding-left: 0.2rem;
        }
      }

      .lich-header {
        background: #dffafe;
        padding: 14px 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-radius: 12px 12px 0 0;
        font-weight: 600;
        font-size: 1.1rem;
        line-height: 1.6;
        border-bottom: 1px solid #bae6fd;
        box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.04);
        margin-bottom: 10px;
      }
      .card {
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        overflow: hidden;
      }

      .lich-info li {
        font-size: 1.1rem;
        line-height: 1.7;
        margin-bottom: 6px;
      }

      .block-title {
        font-size: 1.25rem;
        font-weight: 700;
        margin-bottom: 10px;
      }

      [data-theme="dark"] .lich-header {
        background-color: #172554;
        color: #facc15;
      }

      [data-theme="dark"] .lich-info li {
        color: #e0f2fe;
      }

      [data-theme="dark"] .block-title {
        color: #38bdf8;
      }

      [data-theme="light"] .block-lich {
        color: #075985;
      }

      [data-theme="light"] .block-lich .block-time {
        color: #0c4a6e;
        font-weight: bold;
      }

      [data-theme="light"] .block-lich .block-title {
        color: #0f172a;
        font-weight: 600;
      }
      [data-theme="light"] .lich-header {
        background: #dffafe;
        padding: 12px 16px;
        border-radius: 10px 10px 0 0;
        font-weight: 600;
        display: flex;
        justify-content: space-between;
        color: #075985;
      }
      [data-theme="light"] .section-title {
        background: #bae6fd;
        box-shadow: 0 4px 10px rgba(153, 230, 237, 0.922);
      }
    </style>
  </head>
  <body data-theme="light">
    <div id="theme-wave"></div>

    <div class="container">
      <button id="toggleThemeBtn" class="toggle-theme" onclick="toggleTheme()">
        🌗 Giao diện
      </button>

      <h1>Lịch Cá Nhân</h1>
      <p class="login-info">
        👤 Xin chào: <strong><%= hoTen || "Không rõ tên" %></strong><br />
        📌 Đăng nhập với MSSV: <strong><%= mssv || "Không rõ MSSV" %></strong>
      </p>

      <div style="text-align: right; margin-top: 10px; margin-right: 16px">
        <form action="/logout" method="GET" style="display: inline">
          <button type="submit" class="logout-btn">🔓 Đăng xuất</button>
        </form>
      </div>

      <button
        id="syncBtn"
        onclick="handleSyncClick()"
        style="
          padding: 8px 16px;
          font-size: 14px;
          border-radius: 6px;
          background-color: #007bff;
          color: white;
          border: none;
          cursor: pointer;
          margin-bottom: 12px;
        "
      >
        🔄 Đồng bộ lịch mới nhất
      </button>

      <div class="tab-container">
        <button class="tab active" onclick="showTab('lichThi')">
          📅 Lịch Thi
        </button>
        <button class="tab" onclick="showTab('lichHoc')">📚 Lịch Học</button>
      </div>

      <% const lichThiHopLe = lichThi .filter(i => i.tenHocPhan && i.ngayThi)
      .sort((a, b) => new Date(a.ngayThi.split('/').reverse().join('-')) - new
      Date(b.ngayThi.split('/').reverse().join('-'))); %>

      <div id="lichThi" class="tab-content active">
        <h2 class="section-title">Lịch Thi</h2>

        <% if (lichThiHopLe.length > 0) { %> <% lichThiHopLe.forEach(item => {
        %>
        <div class="block-lich">
          <div class="lich-header">
            <span><%= item.ngayThi %></span>
            <span class="block-time"><%= item.caThi %></span>
          </div>
          <div class="block-title"><%= item.tenHocPhan %></div>
          <ul class="lich-info">
            <li>📘 Mã HP: <%= item.maHocPhan %> (<%= item.soTC %> tín chỉ)</li>
            <li>📝 Hình thức: <%= item.hinhThucThi %></li>
            <li>🏫 Phòng thi: <%= item.phongThi %></li>
            <li>🧑‍🎓 SBD: <%= item.soBaoDanh %></li>
            <% if (item.ghiChu) { %>
            <li>🗒️ Ghi chú: <%= item.ghiChu %></li>
            <% } %>
          </ul>
        </div>
        <% }) %> <% } else { %>
        <p style="margin-top: 12px; font-style: italic; color: gray">
          ⛔ Tạm thời không có lịch thi.
        </p>
        <% } %>
      </div>

      <% const lichHocHopLe = lichHoc .filter(i => i.monHoc && i.thu && i.tiet)
      .sort((a, b) => parseInt(a.thu) - parseInt(b.thu) || parseInt(a.tiet) -
      parseInt(b.tiet)); %>

      <div id="lichHoc" class="tab-content">
        <h2 class="section-title">Lịch Học</h2>

        <% if (lichHocHopLe.length > 0) { %> <% lichHocHopLe.forEach(item => {
        %>
        <div class="block-lich">
          <div class="lich-header">
            <span>Thứ <%= item.thu %></span>
            <span class="block-time">Tiết: <%= item.tiet %></span>
          </div>
          <div class="block-title"><%= item.monHoc %></div>
          <ul class="lich-info">
            <li>🏫 Phòng: <%= item.phong %></li>
            <li>👨‍🏫 Giảng viên: <%= item.giangVien %></li>
            <li>📘 Lớp: <%= item.lop %></li>
            <li>📅 Tuần: <%= item.tuan %></li>
          </ul>
        </div>
        <% }) %> <% } else { %>
        <p style="margin-top: 12px; font-style: italic; color: gray">
          ⛔ Tạm thời không có lịch học.
        </p>
        <% } %>
      </div>

      <div id="loadingSync">
        <div class="spinner"></div>
        <p>⏳ Đang đồng bộ dữ liệu...</p>
      </div>

      <p id="syncStatus"></p>
    </div>

    <script>
      function showTab(tabId) {
        document
          .querySelectorAll(".tab-content")
          .forEach((el) => el.classList.remove("active"));
        document.getElementById(tabId).classList.add("active");

        document
          .querySelectorAll(".tab")
          .forEach((el) => el.classList.remove("active"));
        document
          .querySelector(`.tab[onclick="showTab('${tabId}')"]`)
          .classList.add("active");
      }

      function toggleTheme() {
        const wave = document.getElementById("theme-wave");
        const current = document.body.getAttribute("data-theme");
        const nextTheme = current === "dark" ? "light" : "dark";
        localStorage.setItem("theme", nextTheme);

        const btn = document.getElementById("toggleThemeBtn");
        btn.disabled = true;
        btn.style.opacity = "0.6";
        btn.style.cursor = "not-allowed";

        wave.style.animation = "themeWave 1.3s ease-in-out forwards";

        setTimeout(() => {
          document.body.setAttribute("data-theme", nextTheme);
        }, 850);

        setTimeout(() => {
          wave.style.animation = "";
          btn.disabled = false;
          btn.style.opacity = "1";
          btn.style.cursor = "pointer";
        }, 1400);
      }

      window.addEventListener("DOMContentLoaded", () => {
        const savedTheme = localStorage.getItem("theme");
        if (savedTheme) {
          document.body.setAttribute("data-theme", savedTheme);
        }
      });
      async function handleSyncClick() {
        const btn = document.getElementById("syncBtn");
        const status = document.getElementById("syncStatus");
        const lichHocDiv = document.getElementById("lichHoc");
        const lichThiDiv = document.getElementById("lichThi");
        const loading = document.getElementById("loadingSync");

        btn.disabled = true;
        btn.innerText = "🔄 Đang đồng bộ...";
        status.innerText = "";
        document.body.setAttribute("data-loading", "true");

        lichHocDiv.classList.remove("fade-in", "fade-out");
        lichThiDiv.classList.remove("fade-in", "fade-out");
        lichHocDiv.classList.add("fade-out");
        lichThiDiv.classList.add("fade-out");
        loading.style.display = "block";

        try {
          const syncRes = await fetch("/sync", {
            method: "POST",
            credentials: "include",
          });

          const syncData = await syncRes.json();

          if (
            !syncData.success ||
            !("lichHoc" in syncData) ||
            !("lichThi" in syncData) ||
            !Array.isArray(syncData.lichHoc) ||
            !Array.isArray(syncData.lichThi)
          ) {
            throw new Error("Sync thất bại");
          }

          const lichHocData = syncData.lichHoc;
          const lichThiData = syncData.lichThi;

          setTimeout(() => {
            updateLichHocUI(lichHocData);
            updateLichThiUI(lichThiData);

            lichHocDiv.classList.remove("fade-out");
            lichThiDiv.classList.remove("fade-out");
            lichHocDiv.classList.add("fade-in");
            lichThiDiv.classList.add("fade-in");

            setTimeout(() => {
              lichHocDiv.classList.remove("fade-in");
              lichThiDiv.classList.remove("fade-in");
            }, 500);

            loading.style.display = "none";
            status.innerText = "✅ Đồng bộ thành công!";
            status.style.display = "block";

            if (window.syncStatusTimeout) {
              clearTimeout(window.syncStatusTimeout);
            }

            window.syncStatusTimeout = setTimeout(() => {
              status.innerText = "";
              status.style.display = "none";
            }, 5000);
          }, 300);
        } catch (err) {
          console.error(err);
          loading.style.display = "none";
          status.innerText = "❌ Lỗi khi đồng bộ. Hãy thử lại.";
          status.style.display = "block";
        } finally {
          document.body.removeAttribute("data-loading");
          btn.disabled = false;
          btn.innerText = "🔄 Đồng bộ lịch mới nhất";
        }
      }

      function updateLichHocUI(lichHoc) {
        const lichHocDiv = document.getElementById("lichHoc");
        let html = `<h2 class="section-title">Lịch Học</h2>`;

        const valid = lichHoc.filter((i) => i.monHoc && i.thu && i.tiet);

        if (!valid.length) {
          html += `<p style="margin-top: 12px; font-style: italic; color: gray">⛔ Tạm thời không có lịch học.</p>`;
        } else {
          valid.sort(
            (a, b) =>
              parseInt(a.thu) - parseInt(b.thu) ||
              parseInt(a.tiet) - parseInt(b.tiet)
          );
          valid.forEach((item) => {
            html += `
        <div class="block-lich">
          <div class="lich-header">
            <span>Thứ ${item.thu}</span>
            <span class="block-time">Tiết: ${item.tiet}</span>
          </div>
          <div class="block-title">${item.monHoc}</div>
          <ul class="lich-info">
            <li>🏫 Phòng: ${item.phong}</li>
            <li>👨‍🏫 Giảng viên: ${item.giangVien}</li>
            <li>📘 Lớp: ${item.lop}</li>
            <li>📅 Tuần: ${item.tuan}</li>
          </ul>
        </div>`;
          });
        }

        lichHocDiv.innerHTML = html;

        lichHocDiv.classList.add("fade-in");
        setTimeout(() => lichHocDiv.classList.remove("fade-in"), 500);
      }

      function updateLichThiUI(lichThi) {
        const lichThiDiv = document.getElementById("lichThi");
        let html = `<h2 class="section-title">Lịch Thi</h2>`;

        const valid = lichThi.filter((i) => i.tenHocPhan && i.ngayThi);

        if (!valid.length) {
          html += `<p style="margin-top: 12px; font-style: italic; color: gray">⛔ Tạm thời không có lịch thi.</p>`;
        } else {
          valid.sort((a, b) => {
            const dateA = new Date(a.ngayThi.split("/").reverse().join("-"));
            const dateB = new Date(b.ngayThi.split("/").reverse().join("-"));
            return dateA - dateB;
          });

          valid.forEach((item) => {
            html += `
        <div class="block-lich">
          <div class="lich-header">
            <span>${item.ngayThi}</span>
            <span class="block-time">${item.caThi}</span>
          </div>
          <div class="block-title">${item.tenHocPhan}</div>
          <ul class="lich-info">
            <li>📘 Mã HP: ${item.maHocPhan} (${item.soTC} tín chỉ)</li>
            <li>📝 Hình thức: ${item.hinhThucThi}</li>
            <li>🏫 Phòng thi: ${item.phongThi}</li>
            <li>🧑‍🎓 SBD: ${item.soBaoDanh}</li>
            ${item.ghiChu ? `<li>🗒️ Ghi chú: ${item.ghiChu}</li>` : ""}
          </ul>
        </div>`;
          });
        }

        lichThiDiv.innerHTML = html;

        lichThiDiv.classList.add("fade-in");
        setTimeout(() => lichThiDiv.classList.remove("fade-in"), 500);
      }
      function updateOnlineUsers() {
        fetch("/api/online")
          .then((res) => {
            if (!res.ok) throw new Error("Không lấy được dữ liệu online");
            return res.json();
          })
          .then((data) => {
            const count = Number(data.onlineUsers) || 0;
            const span = document.getElementById("onlineCount");
            if (span) {
              span.textContent = count.toLocaleString("vi-VN");
            }
          })
          .catch((err) => {
            if (!window._onlineErrLogged) {
              console.warn("⚠️ Không thể lấy số người online:", err.message);
              window._onlineErrLogged = true;
            }

            const span = document.getElementById("onlineCount");
            if (span) {
              span.textContent = "0";
            }
          });
      }

      updateOnlineUsers();
      setInterval(updateOnlineUsers, 15000);
    </script>
    <div id="onlineStatus" class="online-status">
      🟢 Đang có <span id="onlineCount">0</span> người đang sử dụng trang web
    </div>
  </body>
</html>
